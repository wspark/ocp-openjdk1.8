apiVersion: v1
kind: Template
labels:
  template: openjdk-dockerbuild-deployment
  xpaas: 1.0.0
metadata:
  annotations:
    description: Application template for EAP73 DeploymentConfig applications built using docker build.
    iconClass: icon-jboss
    tags: javaee,java,openjdk
    version: 1.0.0
  name: openjdk1.8-dockerbuild-deployment
  namespace: openshift
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The openjdk server's http port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-http
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_HTTP}
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      dockerStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          name: openjdk18-openshift:1.8-26
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Docker
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: OPENSHIFT_KUBE_PING_LABELS
            value: application=${APPLICATION_NAME}
          - name: JAVA_OPTS
            value: ${JAVA_OPTS}
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          volumeMounts:
            - mountPath: /logs
              name: ${OPENJDK_LOG_PVC_NAME}
        terminationGracePeriodSeconds: 60
        volumes:
          - name: ${OPENJDK_LOG_PVC_NAME}
            persistentVolumeClaim:
              claimName: ${OPENJDK_LOG_PVC_NAME}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: simple-app
- description: 'Custom hostname for http service route.  Leave blank for default hostname,
    e.g.: <application-name>-<project>.<default-domain-suffix>'
  name: HOSTNAME_HTTP
- description: Git source URI for application
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/wspark/ocp-openjdk1.8.git
- description: Git branch/tag reference
  name: SOURCE_REPOSITORY_REF
- description: Path within Git project to build; empty for root project directory.
  name: CONTEXT_DIR
  value: 
- description: OPENJDK LOG PVC Name
  displayName: OPENJDK LOG PVC Name
  name: OPENJDK_LOG_PVC_NAME
  required: true
  value: openjdk-logs-pvc
- description: GitHub trigger secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: Generic build trigger secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
- description: Java Options -DHOSTNAME=$HOSTNAME -Xms1024m -Xmx2048m -XX:+UseParallelOldGC -verbose:gc -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -XX:+PrintHeapAtGC -Xloggc:/opt/webserver/logs/gc_${HOSTNAME}.log -XX:-HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/opt/webserver/logs/java_pid_${HOSTNAME}.hprof -XX:+ExplicitGCInvokesConcurrent -Duser.timezone=GMT+09:00
  displayName: JAVA_OPTS 
  name: JAVA_OPTS
  value: -DHOSTNAME=$HOSTNAME 
- description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift

